############################################
### FUNCTION TO SUMMARIZE COMMUNITY DATA ###
#############################################

# This function generates a composite figure containing three graphs that collectively describe community data:
# Nestedness plot
# Species richness per site
# Proportion of sites occupied by each species

# Define a function for community summary
community_summary = function(x) {
  
  # Load the required packages
  require(reshape2)
  require(dplyr)
  require(ggplot2)
  require(egg)
  
  # Order the data like a nestedness plot
  x = x[order(-rowSums(ifelse(x > 0, 1, 0)),
              -rowSums(x)),
        order(colSums(ifelse(x > 0, 1, 0)),
              colSums(x))]
  
  # Add row id
  x$id = rownames(x)
  
  # Convert the matrix into the long table format
  x.melt = melt(x)
  
  # Convert abundance data into incidence data
  x.melt$value = ifelse(x.melt$value > 0, 1, 0)
  
  # Rename columns
  colnames(x.melt) = c("rows", "cols", "value")
  
  # Convert rows to a factor with proper levels
  x.melt$rows = factor(x.melt$rows,
                       levels = rownames(x))
  
  # Plot the heatmap
  gg_hm = x.melt %>% 
    ggplot(aes(x = rows, y = cols, fill = value)) + 
    labs(x = NULL, y = NULL) +
    geom_tile(color = "white",
              linewidth = 0.5,
              linetype = 1) + 
    scale_fill_gradient(low = "grey90", high = "#499B75") +
    theme_classic(base_size = 10) +
    theme(axis.line = element_blank(),
          axis.ticks = element_blank(),
          axis.text.x = element_text(colour = "black",
                                     angle = 90,
                                     hjust = 1,
                                     vjust = 0.5,
                                     size = 6 * 1.2),
          axis.text.y = element_text(colour = "black",
                                     face = "italic",
                                     size = 7 * 1.2),
          legend.position = "none")
  
  # Create a plot for species richness by rows
  gg_rows = x.melt %>% 
    group_by(rows) %>% 
    ggplot(aes(x = rows, y = value)) + 
    labs(y = "Species richness") +
    geom_col(fill = "#499B75") +
    theme_classic(base_size = 10) +
    theme(axis.title.x = element_blank(),
          axis.text.x = element_blank(),
          axis.ticks.x = element_blank(),
          axis.line.x = element_blank(),
          axis.title.y = element_text(colour = "black"),
          axis.text.y = element_text(colour = "black"),
          axis.line.y = element_line(linewidth = 2/3),
          axis.ticks.y = element_line(linewidth = 1/3))
  
  # Create a plot for sites occupied by columns
  gg_cols = x.melt %>% 
    group_by(cols) %>%
    ggplot(aes(x = cols, y = value)) + 
    labs(y = "Sites occupied") +
    geom_col(fill = "#499B75") +
    coord_flip() +
    theme_classic() +
    theme(axis.title.y = element_blank(),
          axis.text.y = element_blank(),
          axis.ticks.y = element_blank(),
          axis.line.y = element_blank(),
          axis.title.x = element_text(colour = "black"),
          axis.text.x = element_text(colour = "black"),
          axis.line.x = element_line(linewidth = 1/3),
          axis.ticks.x = element_line(linewidth = 1/3))
  
  # Create an empty plot for spacing
  gg_empty = x.melt %>% 
    ggplot(aes(x = cols, y = value)) +
    geom_blank() +
    theme_classic() +
    theme(axis.text = element_blank(),
          axis.title = element_blank(),
          line = element_blank(),
          panel.background = element_blank())
  
  # Arrange all the plots
  gg = ggarrange(
    gg_rows, gg_empty, gg_hm, gg_cols,
    nrow = 2, ncol = 2, widths = c(3, 1), heights = c(1, 3))
  
  print(gg)
  
  # Save the composite figure
  #ggsave(gg, filename = "community_summary.jpg", dpi = 900, width = 300, height = 150, units = "mm")
  
}

# Load the function in R
# source("https://raw.githubusercontent.com/buenoas/R-functions/main/community_summary")

# Call the community_summary function with your data matrix
# community_summary(your_data_matrix)
